name: Docker

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
  release:
    types:
      - published

permissions:
  packages: write

jobs:
  push:
    name: Build and Push Docker image
    runs-on: ubuntu-20.04
    if: "!contains(github.ref, 'develop') || (!contains(github.event.head_commit.message, 'skip docker') && !contains(github.event.head_commit.message, 'docker skip'))"
    steps:
      - name: Code checkout
        uses: actions/checkout@v4

      - name: Docker metadata
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/pyrohost/pyrodactyl
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest,enable=${{ github.event_name == 'release' && github.event.action == 'published' && github.event.release.prerelease == false && github.ref != 'refs/heads/dev' }}
            type=ref,event=tag,enable=${{ github.ref != 'refs/heads/dev' }}
            type=ref,event=branch

      - name: Setup QEMU for multi-architecture support
        uses: docker/setup-qemu-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: "github.event_name != 'pull_request'"
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Update version for release
        if: "github.event_name == 'release' && github.event.action == 'published'"
        env:
          REF: ${{ github.event.release.tag_name }}
        run: |
          sed -i "s/    'version' => 'canary',/    'version' => '${REF:1}',/" config/app.php

      - name: Build and Push multi-architecture Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

